#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace JIPT_Institute
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="InstituteDb")]
	public partial class InstituteDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblImage(tblImage instance);
    partial void UpdatetblImage(tblImage instance);
    partial void DeletetblImage(tblImage instance);
    partial void InserttbVideo(tbVideo instance);
    partial void UpdatetbVideo(tbVideo instance);
    partial void DeletetbVideo(tbVideo instance);
    partial void InserttblCarousel(tblCarousel instance);
    partial void UpdatetblCarousel(tblCarousel instance);
    partial void DeletetblCarousel(tblCarousel instance);
    partial void Inserttblstudent(tblstudent instance);
    partial void Updatetblstudent(tblstudent instance);
    partial void Deletetblstudent(tblstudent instance);
    #endregion
		
		public InstituteDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstituteDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstituteDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public InstituteDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<tblImage> tblImages
		{
			get
			{
				return this.GetTable<tblImage>();
			}
		}
		
		public System.Data.Linq.Table<tbVideo> tbVideos
		{
			get
			{
				return this.GetTable<tbVideo>();
			}
		}
		
		public System.Data.Linq.Table<tblCarousel> tblCarousels
		{
			get
			{
				return this.GetTable<tblCarousel>();
			}
		}
		
		public System.Data.Linq.Table<tblstudent> tblstudents
		{
			get
			{
				return this.GetTable<tblstudent>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblImages")]
	public partial class tblImage : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cid;
		
		private string _ImgName;
		
		private string _ImgPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OnImgNameChanging(string value);
    partial void OnImgNameChanged();
    partial void OnImgPathChanging(string value);
    partial void OnImgPathChanged();
    #endregion
		
		public tblImage()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgName", DbType="VarChar(20)")]
		public string ImgName
		{
			get
			{
				return this._ImgName;
			}
			set
			{
				if ((this._ImgName != value))
				{
					this.OnImgNameChanging(value);
					this.SendPropertyChanging();
					this._ImgName = value;
					this.SendPropertyChanged("ImgName");
					this.OnImgNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgPath", DbType="VarChar(MAX)")]
		public string ImgPath
		{
			get
			{
				return this._ImgPath;
			}
			set
			{
				if ((this._ImgPath != value))
				{
					this.OnImgPathChanging(value);
					this.SendPropertyChanging();
					this._ImgPath = value;
					this.SendPropertyChanged("ImgPath");
					this.OnImgPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tbVideos")]
	public partial class tbVideo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _vid;
		
		private string _VdName;
		
		private string _VdPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnvidChanging(int value);
    partial void OnvidChanged();
    partial void OnVdNameChanging(string value);
    partial void OnVdNameChanged();
    partial void OnVdPathChanging(string value);
    partial void OnVdPathChanged();
    #endregion
		
		public tbVideo()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_vid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int vid
		{
			get
			{
				return this._vid;
			}
			set
			{
				if ((this._vid != value))
				{
					this.OnvidChanging(value);
					this.SendPropertyChanging();
					this._vid = value;
					this.SendPropertyChanged("vid");
					this.OnvidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VdName", DbType="VarChar(20)")]
		public string VdName
		{
			get
			{
				return this._VdName;
			}
			set
			{
				if ((this._VdName != value))
				{
					this.OnVdNameChanging(value);
					this.SendPropertyChanging();
					this._VdName = value;
					this.SendPropertyChanged("VdName");
					this.OnVdNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_VdPath", DbType="VarChar(MAX)")]
		public string VdPath
		{
			get
			{
				return this._VdPath;
			}
			set
			{
				if ((this._VdPath != value))
				{
					this.OnVdPathChanging(value);
					this.SendPropertyChanging();
					this._VdPath = value;
					this.SendPropertyChanged("VdPath");
					this.OnVdPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCarousel")]
	public partial class tblCarousel : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _cid;
		
		private string _cName;
		
		private string _imgPath;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OncidChanging(int value);
    partial void OncidChanged();
    partial void OncNameChanging(string value);
    partial void OncNameChanged();
    partial void OnimgPathChanging(string value);
    partial void OnimgPathChanged();
    #endregion
		
		public tblCarousel()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int cid
		{
			get
			{
				return this._cid;
			}
			set
			{
				if ((this._cid != value))
				{
					this.OncidChanging(value);
					this.SendPropertyChanging();
					this._cid = value;
					this.SendPropertyChanged("cid");
					this.OncidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName", DbType="VarChar(20)")]
		public string cName
		{
			get
			{
				return this._cName;
			}
			set
			{
				if ((this._cName != value))
				{
					this.OncNameChanging(value);
					this.SendPropertyChanging();
					this._cName = value;
					this.SendPropertyChanged("cName");
					this.OncNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_imgPath", DbType="VarChar(MAX)")]
		public string imgPath
		{
			get
			{
				return this._imgPath;
			}
			set
			{
				if ((this._imgPath != value))
				{
					this.OnimgPathChanging(value);
					this.SendPropertyChanging();
					this._imgPath = value;
					this.SendPropertyChanged("imgPath");
					this.OnimgPathChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblstudent")]
	public partial class tblstudent : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _sid;
		
		private string _Name;
		
		private System.Nullable<int> _Age;
		
		private string _Gender;
		
		private string _Phone;
		
		private string _Email;
		
		private string _Address;
		
		private string _Course;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnsidChanging(int value);
    partial void OnsidChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnAgeChanging(System.Nullable<int> value);
    partial void OnAgeChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnAddressChanging(string value);
    partial void OnAddressChanged();
    partial void OnCourseChanging(string value);
    partial void OnCourseChanged();
    #endregion
		
		public tblstudent()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int sid
		{
			get
			{
				return this._sid;
			}
			set
			{
				if ((this._sid != value))
				{
					this.OnsidChanging(value);
					this.SendPropertyChanging();
					this._sid = value;
					this.SendPropertyChanged("sid");
					this.OnsidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(20)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Age", DbType="Int")]
		public System.Nullable<int> Age
		{
			get
			{
				return this._Age;
			}
			set
			{
				if ((this._Age != value))
				{
					this.OnAgeChanging(value);
					this.SendPropertyChanging();
					this._Age = value;
					this.SendPropertyChanged("Age");
					this.OnAgeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(20)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Address", DbType="VarChar(50)")]
		public string Address
		{
			get
			{
				return this._Address;
			}
			set
			{
				if ((this._Address != value))
				{
					this.OnAddressChanging(value);
					this.SendPropertyChanging();
					this._Address = value;
					this.SendPropertyChanged("Address");
					this.OnAddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Course", DbType="VarChar(15)")]
		public string Course
		{
			get
			{
				return this._Course;
			}
			set
			{
				if ((this._Course != value))
				{
					this.OnCourseChanging(value);
					this.SendPropertyChanging();
					this._Course = value;
					this.SendPropertyChanged("Course");
					this.OnCourseChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
